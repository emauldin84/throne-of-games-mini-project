{"version":3,"sources":["ThroneOfGames/components/Dashboard.js","TicTacTyrion/components/Board.js","TicTacTyrion/components/Result.js","TicTacTyrion/components/characters.js","TicTacTyrion/components/PlayerOne.js","TicTacTyrion/components/PlayerTwo.js","TicTacTyrion/components/TicTacTyrion.js","Connect4Houses/components/DropArea.js","Connect4Houses/components/Board.js","Connect4Houses/components/Results.js","Connect4Houses/components/Connect4Houses.js","CerseiSays/Board.js","CerseiSays/Result.js","CerseiSays/RoundCounter.js","CerseiSays/CerseiSays.js","ThroneOfGames/components/Dropdown.js","App.js","serviceWorker.js","index.js"],"names":["Dashboard","react_default","a","createElement","className","react_router_dom","to","Board","_ref","board","clickHandler","playerOneName","checkWinner","playerTwoName","player1png","concat","replaceSpaceWithHyphen","player2png","blank","onClick","A1","src","alt","B1","C1","A2","B2","C2","A3","B3","C3","text","map"," ","replace","m","Result","winner","characters","PlayerOne","playerOne","playerTwo","setPlayer","turn","characterList","filter","character","sort","onChange","e","target","value","defaultValue","key","disabled","PlayerTwo","TicTacTyrion","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_setPlayerOneName","name","setState","_setPlayerTwoName","_setCell","cell","state","tempBoard","objectSpread","isPlayerOneTurn","console","log","Row1","Row2","Row3","Col1","Col2","Col3","Diag1","Diag2","checkArrayForWin","turnCounter","_newGame","rel","type","href","Component","array","DropArea","style","left","dropAreaRef","React","createRef","_this2","data-droparea","ref","onMouseMove","clientX","current","offsetLeft","offsetWidth","leftPos","Math","min","offsetHeight","dropColumn","parseInt","indexOf","getDropColumnFun","player","DropArea_DropArea","square","i","blankBoard","A0","B0","C0","D0","D1","D2","D3","A4","B4","C4","D4","A5","B5","C5","D5","E0","F0","G0","E1","F1","G1","E2","F2","G2","E3","F3","G3","E4","F4","G4","E5","F5","G5","Connect4Houses","columnA","columnB","columnC","columnD","columnE","columnF","columnG","_getDropColumn","columnArray","_returnColumnArray","length","_this$setState","squarePosition","replaceColNumberWithLetter","columnToUpdate","playerValue","Row0","Row4","Row5","ColA","ColB","ColC","ColD","ColE","ColF","ColG","Diag3","Diag4","Diag5","Diag6","Diag7","Diag8","Diag9","Diag10","Diag11","Diag12","checArrayForWinner","colToAdd","defineProperty","toConsumableArray","colNumber","Board_Board","Results_Result","test","number","1","2","3","4","5","6","7","eaObj","image","id","cube","loser","RoundCounter","round","CerseiSays","_Component","_newRound","randomCube","random","tempRandomArray","randomSelection","userInput","isComputerTurn","_checkComputerTurn","_playComputerSound","index","chosenObjIndex","updateState","eaAudio","Audio","addEventListener","play","_checkState","_this$state","isLoser","isWinner","audio","userInputArray","setTimeout","_playShame","_startNewGame","shame","pause","currentTime","intervalSet","inherits","createClass","CerseiSays_Board_Board","Result_Result","Dropdown","App","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7222dea0.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function Dashboard() {\n    return (\n        <div className='game-selector-div'>\n        <p>\n            <Link to='/tic-tac-tyrion' className='game-links'>Tic-Tac-Tyrion</Link>\n        </p>\n        <p>\n            <Link to='/cersei-says' className='game-links'>Cersei Says</Link>\n\n        </p>\n        <p>\n            <Link to='/connect-four-houses' className='game-links'>Connect Four Houses</Link>\n\n        </p>\n        </div>\n    )\n    }\n","import React from 'react'\n\n\n\nexport default function Board({board, clickHandler, checkWinner, playerOneName, playerTwoName}) {\n\n    // const player1png = \"./imgs/Arya-Stark.png\" ;\n    const player1png = `./imgs/${replaceSpaceWithHyphen(playerOneName)}.png`\n    // const player2png = \"./imgs/The-Hound.png\";\n    const player2png = `./imgs/${replaceSpaceWithHyphen(playerTwoName)}.png`\n    const blank = \"./imgs/blank.png\";\n\n    // console.log(\"testing function\", replaceSpaceWithHyphen(\"arya and me gets changed.png\"));\n\n    return (\n        <div className='ticTacToeBoard'>\n            <div className='ticTacToeSquare' onClick={()  => {\n                if (board.A1 === null) {\n                clickHandler('A1')\n                }\n            \n            }}>\n             {/* {board.A1} */}\n            <img \n            className={board.A1 === 'O' ? \"flipped\" : \"\"}\n            src={board.A1 ? ( board.A1 === 'X' ? player1png : player2png) : blank} alt=\"sprite\" />\n            </div>\n\n            <div className='ticTacToeSquare' onClick={()  => {\n                if (board.B1 === null) {\n\n                clickHandler('B1')\n                }\n            }}>\n            <img \n            className={board.B1 === 'O' ? \"flipped\" : \"\"}\n            src={board.B1 ? ( board.B1 === 'X' ? player1png : player2png) : blank} alt=\"sprite\" />\n            </div>\n\n            <div className='ticTacToeSquare' onClick={()  => {\n                if (board.C1 === null) {\n\n                clickHandler('C1')\n                }\n            }}>\n            {/* {board.C1} */}\n            <img \n            className={board.C1 === 'O' ? \"flipped\" : \"\"}\n            src={board.C1 ? ( board.C1 === 'X' ? player1png : player2png) : blank} alt=\"sprite\" />\n            </div>\n\n            <div className='ticTacToeSquare' onClick={()  => {\n                if (board.A2 === null) {\n                    clickHandler('A2')\n                }\n            }}>\n            {/* {board.A2} */}\n            <img \n            className={board.A2 === 'O' ? \"flipped\" : \"\"}\n            src={board.A2 ? ( board.A2 === 'X' ? player1png : player2png) : blank} alt=\"sprite\" />\n            </div>\n\n            <div className='ticTacToeSquare' onClick={()  => {\n                if (board.B2 === null) {\n\n                clickHandler('B2')\n                }\n            }}>\n            {/* {board.B2} */}\n            <img \n            className={board.B2 === 'O' ? \"flipped\" : \"\"}\n            src={board.B2 ? ( board.B2 === 'X' ? player1png : player2png) : blank} alt=\"sprite\" />\n            </div>\n            <div className='ticTacToeSquare' onClick={()  => {\n                if (board.C2 === null) {\n\n                clickHandler('C2')\n                }\n            }}>\n            {/* {board.C2} */}\n            <img \n            className={board.C2 === 'O' ? \"flipped\" : \"\"}\n            src={board.C2 ? ( board.C2 === 'X' ? player1png : player2png) : blank} alt=\"sprite\" />\n            </div>\n            <div className='ticTacToeSquare' onClick={()  => {\n                if (board.A3 === null) {\n\n                clickHandler('A3')\n                }\n            }}>\n            {/* {board.A3} */}\n            <img \n            className={board.A3 === 'O' ? \"flipped\" : \"\"}\n            src={board.A3 ? ( board.A3 === 'X' ? player1png : player2png) : blank} alt=\"sprite\" />\n\n            </div>\n            <div className='ticTacToeSquare' onClick={()  => { \n                if (board.B3 === null) {\n\n                clickHandler('B3')\n                }\n            }}>\n            {/* {board.B3} */}\n            <img \n            className={board.B3 === 'O' ? \"flipped\" : \"\"}\n            src={board.B3 ? ( board.B3 === 'X' ? player1png : player2png) : blank} \n            \n            alt=\"sprite\" />\n\n            </div>\n            <div className='ticTacToeSquare' onClick={()  => {\n                if (board.C3 === null) {\n\n                clickHandler('C3')\n                }\n            }}>\n            {/* {board.C3} */}\n            <img \n            className={board.C3 === 'O' ? \"flipped\" : \"\"}\n            src={board.C3 ? ( board.C3 === 'X' ? player1png : player2png) : blank} alt=\"sprite\" />\n            </div>\n        </div>\n    )\n}\n\n;\n//helper function\nfunction replaceSpaceWithHyphen(text) {\n    var map = {\n        ' ' : '-',\n    }\n    return text.replace(/[ ]/g,function(m) {\n        return map[m];\n    })\n}\n\n","import React from 'react'\n\nexport default function Result({winner, clickHandler}) {\n    return (\n        <div>\n            <h1 className={winner ? 'result' : null}>{winner} {((winner === null) || (winner === \"Draw\")) ? \"\" : \"Wins\"}</h1>\n        <button className={winner ? 'pulse' : null} onClick={clickHandler}>New Game</button>\n        </div>\n    )\n}\n\n// {winner ? 'result' : null}","//we don't have images for the greyed out characters\n\nconst characters = [\n[\"Ned Stark\",1],\n[\"Jon Snow\",2],\n[\"Robert Baratheon\",3],\n[\"Robb Stark\",4],\n[\"Arya Stark\",5],\n[\"Yara Greyjoy\",6],\n[\"Theon Greyjoy\",7],\n[\"Daenerys Targaryen\",8],\n[\"Bran Stark\",9],\n[\"Hodor\",10],\n[\"Khal Drogo\",11],\n[\"Samwell Tarly\",12],\n[\"Melisandre\",13],\n[\"Stannis Baratheon\",14],\n[\"Varys\",15],\n[\"Brienne of Tarth\",16],\n[\"Jorah Mormont\",17],\n[\"Jaime Lannister\",18],\n[\"Tywin Lannister\",19],\n[\"Jaqen Hghar\",20],\n[\"Ghost\",21],\n[\"Tyrion Lannister\",22],\n[\"Cersei Lannister\",23],\n[\"Oberyn Martell\",24],\n[\"Ygritte\",25],\n[\"White Walker\",26],\n[\"Gendry\",27],\n[\"Grey Worm\",28],\n[\"The Hound\",29],\n[\"The Mountain\",30],\n[\"Joffrey Baratheon\",31],\n[\"Ramsey Bolton\",32],\n[\"Petyr Baelish\",33]\n];\nexport default characters;\n","import React from 'react'\n\nexport default function PlayerOne({ characters, playerOne, playerTwo, setPlayer, turn}) {\n    const characterList = characters.filter(character => (\n        character[0] !== playerTwo\n    ))\n    characterList.sort()\n    return (\n        <div className='player-div'>\n            <h3 className={turn ? 'playerTurn' : null}>{playerOne}</h3>\n            <select className='custom-select' onChange={(e) => {\n                setPlayer(e.target.value)\n            }}\n            defaultValue={playerOne}\n            >\n            <option key={-1} disabled \n                // selected={playerOne === \"Player One\"} \n                value=\"Player One\">Select Character</option>\n                {characterList.map((character) => (\n                    <option key={character[1]} value={character[0]}>{character[0]}</option>\n                ))}\n            </select>\n\n            \n        </div>\n    )\n}\n\n","import React from 'react'\n\nexport default function PlayerTwo({ characters, playerOne, playerTwo, setPlayer, turn}) {\n    const characterList = characters.filter(character => (\n        character[0] !== playerOne\n    ))\n    characterList.sort()\n    return (\n        <div className='player-div'>\n            <h3 className = {!turn ? 'playerTurn' : null}>{playerTwo}</h3>\n            <select className='custom-select' onChange={(e) => {\n                setPlayer(e.target.value)\n            }}\n            defaultValue={playerTwo}\n            >\n            <option key={-1} disabled \n                // selected={playerTwo === \"Player Two\"} \n                value=\"Player Two\">Select Character\n            </option>\n                {characterList.map((character) => (\n                    <option key={character[1]} value={character[0]}>{character[0]}</option>\n                ))}\n            </select>\n            \n        </div>\n    )\n}","import React, { Component } from \"react\";\nimport Board from \"./Board\";\nimport Result from \"./Result\";\nimport characters from \"./characters.js\";\nimport PlayerOne from \"./PlayerOne\";\nimport PlayerTwo from \"./PlayerTwo\";\n\nexport default class TicTacTyrion extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tplayerOneName: \"Player One\", // player one is always 'X'\n\t\t\tplayerTwoName: \"Player Two\", // player two is always 'O'\n\t\t\tisPlayerOneTurn: true,\n\t\t\t// Letters for columns, numbers for rows\n\t\t\t// There will be eight arrays containing the board values ('X', 'O' or null) that will be checked after each turn.\n\t\t\tboard: {\n\t\t\t\tA1: null,\n\t\t\t\tA2: null,\n\t\t\t\tA3: null,\n\t\t\t\tB1: null,\n\t\t\t\tB2: null,\n\t\t\t\tB3: null,\n\t\t\t\tC1: null,\n\t\t\t\tC2: null,\n\t\t\t\tC3: null\n\t\t\t},\n\t\t\tturnCounter: 0,\n\t\t\twinner: null // after turnCounter = 9 check array, then result in 'draw' if no arrays === true. Otherwise, 'player one' or 'player two'\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"tic-tac-tyrion-main\">\n\t\t\t\t<link\n\t\t\t\t\trel=\"StyleSheet\"\n\t\t\t\t\ttype=\"text/css\"\n\t\t\t\t\thref=\"../styles/tic-tac-tyrion.css\"\n\t\t\t\t/>\n\t\t\t\t<h1>Tic-Tac-Tyrion</h1>\n\n\t\t\t\t<div className=\"tic-tac-tyrion-container\">\n\t\t\t\t\t<PlayerOne\n\t\t\t\t\t\tcharacters={characters}\n\t\t\t\t\t\tplayerOne={this.state.playerOneName}\n\t\t\t\t\t\tplayerTwo={this.state.playerTwoName}\n\t\t\t\t\t\tturn={this.state.isPlayerOneTurn}\n\t\t\t\t\t\tsetPlayer={this._setPlayerOneName}\n\t\t\t\t\t/>\n\t\t\t\t\t<Board\n\t\t\t\t\t\tboard={this.state.board}\n\t\t\t\t\t\tclickHandler={this._setCell}\n\t\t\t\t\t\tplayerOneName={this.state.playerOneName}\n\t\t\t\t\t\tplayerTwoName={this.state.playerTwoName}\n\t\t\t\t\t/>\n\t\t\t\t\t<PlayerTwo\n\t\t\t\t\t\tcharacters={characters}\n\t\t\t\t\t\tplayerOne={this.state.playerOneName}\n\t\t\t\t\t\tplayerTwo={this.state.playerTwoName}\n\t\t\t\t\t\tturn={this.state.isPlayerOneTurn}\n\t\t\t\t\t\tsetPlayer={this._setPlayerTwoName}\n\t\t\t\t\t/>\n\t\t\t\t\t{/* Result to display start button or display who won (or lion-scratch) with a play again at end of game */}\n\t\t\t\t</div>\n\t\t\t\t<Result\n\t\t\t\t\twinner={this.state.winner}\n\t\t\t\t\tclickHandler={this._newGame}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t_setPlayerOneName = name => {\n\t\tthis.setState({\n\t\t\tplayerOneName: name\n\t\t});\n\t};\n\n\t_setPlayerTwoName = name => {\n\t\tthis.setState({\n\t\t\tplayerTwoName: name\n\t\t});\n\t};\n\n\t_setCell = cell => {\n\t\t// sets value of cell depending on the player turn\n\t\tif (!this.state.winner) {\n\t\t\tconst tempBoard = { ...this.state.board };\n\t\t\tif (this.state.isPlayerOneTurn) {\n\t\t\t\ttempBoard[cell] = \"X\";\n\t\t\t} else {\n\t\t\t\ttempBoard[cell] = \"O\";\n\t\t\t}\n\n\t\t\tconsole.log(\"the current board\", this.state.board);\n\n\t\t\tconst Row1 = [tempBoard.A1, tempBoard.B1, tempBoard.C1];\n\t\t\tconst Row2 = [tempBoard.A2, tempBoard.B2, tempBoard.C2];\n\t\t\tconst Row3 = [tempBoard.A3, tempBoard.B3, tempBoard.C3];\n\t\t\tconst Col1 = [tempBoard.A1, tempBoard.A2, tempBoard.A3];\n\t\t\tconst Col2 = [tempBoard.B1, tempBoard.B2, tempBoard.B3];\n\t\t\tconst Col3 = [tempBoard.C1, tempBoard.C2, tempBoard.C3];\n\t\t\tconst Diag1 = [tempBoard.A1, tempBoard.B2, tempBoard.C3];\n\t\t\tconst Diag2 = [tempBoard.A3, tempBoard.B2, tempBoard.C1];\n\n\t\t\tlet winner = this.state.winner;\n\t\t\tif (\n\t\t\t\tcheckArrayForWin(Row1) ||\n\t\t\t\tcheckArrayForWin(Row2) ||\n\t\t\t\tcheckArrayForWin(Row3) ||\n\t\t\t\tcheckArrayForWin(Col1) ||\n\t\t\t\tcheckArrayForWin(Col2) ||\n\t\t\t\tcheckArrayForWin(Col3) ||\n\t\t\t\tcheckArrayForWin(Diag1) ||\n\t\t\t\tcheckArrayForWin(Diag2)\n\t\t\t) {\n\t\t\t\t//if true for any one array - there is a winner\n\t\t\t\tif (this.state.isPlayerOneTurn) {\n\t\t\t\t\twinner = this.state.playerOneName;\n\t\t\t\t} else {\n\t\t\t\t\twinner = this.state.playerTwoName;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.state.turnCounter === 8 && winner === null) {\n\t\t\t\twinner = \"Draw\";\n\t\t\t}\n\n\t\t\t// else {\n\t\t\t//     //no winner\n\t\t\t//     counter +1 unloess at 9\n\t\t\t// }\n\n\t\t\t// set turn counter\n\n\t\t\t// set player turn\n\t\t\t// set winner\n\n\t\t\tthis.setState({\n\t\t\t\tboard: tempBoard,\n\t\t\t\tturnCounter: this.state.turnCounter + 1,\n\t\t\t\tisPlayerOneTurn: !this.state.isPlayerOneTurn,\n\t\t\t\twinner: winner\n\t\t\t});\n\t\t}\n\t};\n\t_newGame = () => {\n\t\t//not changing player names\n\t\tthis.setState({\n\t\t\tisPlayerOneTurn: true, //should always start true so figures face correct direction\n\n\t\t\t// Letters for columns, numbers for rows\n\t\t\t// There will be eight arrays containing the board values ('X', 'O' or null) that will be checked after each turn.\n\t\t\tboard: {\n\t\t\t\tA1: null,\n\t\t\t\tA2: null,\n\t\t\t\tA3: null,\n\t\t\t\tB1: null,\n\t\t\t\tB2: null,\n\t\t\t\tB3: null,\n\t\t\t\tC1: null,\n\t\t\t\tC2: null,\n\t\t\t\tC3: null\n\t\t\t},\n\t\t\tturnCounter: 0,\n\t\t\twinner: null\n\t\t});\n\t};\n}\n\n//helper function\nfunction checkArrayForWin(array) {\n\tconsole.log(array[0], array[1], array[2]);\n\tif (array[0] === array[1] && array[1] === array[2] && array[0] !== null) {\n\t\tconsole.log(\"they are the same\");\n\t\treturn true;\n\t} else {\n\t\tconsole.log(\"they are not the same\");\n\t\treturn false;\n\t}\n}\n","import React, { Component } from 'react'\n\n// const coinXpos = -100;\n    // let coinStyle = {left:coinXpos}\n\nexport default class DropArea extends Component {\n    constructor(props) {\n        super(props) ;\n            this.state={\n                style:{left:-500}\n            }\n            this.dropAreaRef = React.createRef();\n\n    }\n    \n\n\n  render() {\n    return (\n      <div className=\"dropArea\" data-droparea\n            ref={this.dropAreaRef}\n\n                onMouseMove={(e) => {\n                    // console.log(\"on mouse over: \", e.clientX);\n                    // console.log(\"my new ref width\", this.dropAreaRef.current.offsetWidth)\n                    // console.log(\"better left is \", this.dropAreaRef.current.offsetLeft)\n                    // let coinStyle ={left:this.state.xpos}\n\n                    //this updates the icon position on screen\n\n                    //SOMEHOW, the div image can inherit this onmousemove event,\n                    //which allows you to drag the image to the right.\n                    //so, i will prevcent that\n\n                    if ((e.clientX - (this.dropAreaRef.current.offsetLeft + this.dropAreaRef.current.offsetWidth )) <= 0) {\n                        let leftPos = Math.min((e.clientX - this.dropAreaRef.current.offsetLeft),\n                                (this.dropAreaRef.current.offsetWidth-this.dropAreaRef.current.offsetHeight))\n                                // console.log(leftPos);\n                        this.setState({\n                            // style:{left: e.clientX - e.nativeEvent.srcElement.offsetLeft}\n                            // style:{left: e.clientX - this.dropAreaRef.current.offsetLeft}\n                            style:{left: leftPos}\n                        })\n\n                    }\n                }}\n                onClick={(e) => {\n\n                    //this starts the game play...\n\n                    //a ref to the element works SO MUCH BETTER.  otherwise, you\n                    //could be clickin in the drop area, or on the icon and the widths got confused.\n\n                    // console.log(\"on mouse over: \", e.clientX);\n                    // console.log(\"e.natvieEvent\", e.nativeEvent);\n                    // console.log(\"native event\", e.nativeEvent.srcElement.offsetLeft);\n                    // console.log(\"scroll width is \", e.nativeEvent.srcElement.scrollWidth);\n\n                    // split the width into 7 rows.\n                    // const dropColumn = parseInt((e.clientX - e.nativeEvent.srcElement.offsetLeft) / (e.nativeEvent.srcElement.scrollWidth / 7)) + 1\n                    const dropColumn = parseInt((e.clientX - this.dropAreaRef.current.offsetLeft) / (this.dropAreaRef.current.offsetWidth / 7)) + 1\n                    // console.log(\"The column to drop in is \" ,dropColumn);\n                    //don't drop unless this a number between 1 and 7!!\n                    if ([1,2,3,4,5,6,7].indexOf(dropColumn) !== -1) {\n\n                        this.props.getDropColumnFun(dropColumn);\n                    }\n                }}\n                \n                > \n                <div >     \n                            {/* SOMEHOW THE IMAGE IS INHERITING THE ON-MOUSE-OVER EVENT */}\n                      <p>CLICK HERE TO DROP</p>\n\n                <img className=\"coinToDrop\" style={this.state.style} \n                src= {this.props.player ? \"./imgs/fire-ball.png\" : \"./imgs/ice-ball.png\" } \n                alt={this.props.player ? \"fire token\" : \"ice token\" } />\n                </div>\n                </div>\n\n    )\n  }\n\n}\n","import React from \"react\";\nimport DropArea from \"./DropArea\";\n\nexport default function Board({\n\tboard,\n\tgetDropColumnFun,\n\tplayerOne\n}) {\n\t// console.log(\"this shoudl bve ture or false for player one\", playerOne)\n\tconst player1png = \"./imgs/fire-circle.gif\";\n\t// const player1png = `./imgs/${replaceSpaceWithHyphen(playerOneName)}.png`\n\tconst player2png = \"./imgs/ice.gif\";\n\t// const player2png = `./imgs/${replaceSpaceWithHyphen(playerTwoName)}.png`\n\tconst blank = \"./imgs/blank.png\";\n\n\tconst cellNames = [\n\t\t\"A5\",\n\t\t\"B5\",\n\t\t\"C5\",\n\t\t\"D5\",\n\t\t\"E5\",\n\t\t\"F5\",\n\t\t\"G5\",\n\t\t\"A4\",\n\t\t\"B4\",\n\t\t\"C4\",\n\t\t\"D4\",\n\t\t\"E4\",\n\t\t\"F4\",\n\t\t\"G4\",\n\t\t\"A3\",\n\t\t\"B3\",\n\t\t\"C3\",\n\t\t\"D3\",\n\t\t\"E3\",\n\t\t\"F3\",\n\t\t\"G3\",\n\t\t\"A2\",\n\t\t\"B2\",\n\t\t\"C2\",\n\t\t\"D2\",\n\t\t\"E2\",\n\t\t\"F2\",\n\t\t\"G2\",\n\t\t\"A1\",\n\t\t\"B1\",\n\t\t\"C1\",\n\t\t\"D1\",\n\t\t\"E1\",\n\t\t\"F1\",\n\t\t\"G1\",\n\t\t\"A0\",\n\t\t\"B0\",\n\t\t\"C0\",\n\t\t\"D0\",\n\t\t\"E0\",\n\t\t\"F0\",\n\t\t\"G0\"\n\t];\n\n\treturn (\n\t\t<div className=\"masterGrid\">\n\t\t\t<DropArea getDropColumnFun={getDropColumnFun} player={playerOne} />\n\n\t\t\t<div className=\"boardcontainer\">\n\t\t\t\t<div className=\"connect4housesBoard\">\n\t\t\t\t\t{cellNames.map((square, i) => (\n\t\t\t\t\t\t<div className=\"connect4housesSquare\" key={i}>\n\t\t\t\t\t\t\t{board[square] ? (\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\t\tboard[square] === \"X\"\n\t\t\t\t\t\t\t\t\t\t\t? `${player1png}?${square}`\n\t\t\t\t\t\t\t\t\t\t\t: `${player2png}?${square}`\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\talt=\"fireOrIceGif\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div className=\"empty-box-container\" />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"overlaydiv\">\n\t\t\t\t\t{/* <img src=\"../imgs/rockwall.png\" alt=\"rock wall overlay for connect 4\" /> */}\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc=\"../imgs/darkwall.png\"\n\t\t\t\t\t\talt=\"rock wall overlay for connect 4\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react'\n\nexport default function Result({winner, clickHandler}) {\n    return (\n        <div>\n            <h1 className={winner ? 'result' : null}>{winner} {((winner === null) || (winner === \"Draw\")) ? \"\" : \"Wins\"}</h1>\n        <button className={winner ? 'pulse' : null} onClick={clickHandler}>New Game</button>\n        </div>\n    )\n}\n\n// {winner ? 'result' : null}","import React, { Component } from \"react\";\nimport Board from \"./Board\";\nimport Results from \"./Results\";\n\n// import Result from './Result';\n// import characters from './characters.js'\n// import PlayerOne from './PlayerOne'\n// import PlayerTwo from './PlayerTwo'\n\n// Letters for columns, numbers for rows\n// There will be 6+7+12 arrays containing the board values ('X', 'O' or null) that will be checked after each turn.\n//mao - i'm thinking the columns fill up from the bottom, just like an array...\n\nconst blankBoard = {\n\tA0: null,\n\tB0: null,\n\tC0: null,\n\tD0: null,\n\tA1: null,\n\tB1: null,\n\tC1: null,\n\tD1: null,\n\tA2: null,\n\tB2: null,\n\tC2: null,\n\tD2: null,\n\tA3: null,\n\tB3: null,\n\tC3: null,\n\tD3: null,\n\tA4: null,\n\tB4: null,\n\tC4: null,\n\tD4: null,\n\tA5: null,\n\tB5: null,\n\tC5: null,\n\tD5: null,\n\tE0: null,\n\tF0: null,\n\tG0: null,\n\tE1: null,\n\tF1: null,\n\tG1: null,\n\tE2: null,\n\tF2: null,\n\tG2: null,\n\tE3: null,\n\tF3: null,\n\tG3: null,\n\tE4: null,\n\tF4: null,\n\tG4: null,\n\tE5: null,\n\tF5: null,\n\tG5: null\n};\n\nexport default class Connect4Houses extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tplayerOneName: \"Fire\", // player one is always 'X'\n\t\t\tplayerTwoName: \"Ice\", // player two is always 'O'\n\t\t\tisPlayerOneTurn: true,\n\t\t\tboard: blankBoard,\n\t\t\tcolumnA: [],\n\t\t\tcolumnB: [],\n\t\t\tcolumnC: [],\n\t\t\tcolumnD: [],\n\t\t\tcolumnE: [],\n\t\t\tcolumnF: [],\n\t\t\tcolumnG: [],\n\t\t\tturnCounter: 0, //max is 6*7 = 42\n\t\t\twinner: null, // after turnCounter = 42 check array, then result in 'draw' if no arrays === true. Otherwise, 'player one' or 'player two'\n\t\t\tcolToAdd: null\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\n\n\t\t\t<div className=\"connect4Flex\">  \n\n\t\t\t\t\n\n\n\t\t\t\t\t\t<div className=\"connect4HousesMain\">\n\t\t\t\t<link\n\t\t\t\t\trel=\"StyleSheet\"\n\t\t\t\t\ttype=\"text/css\"\n\t\t\t\t\thref=\"../styles/connect4Houses.css\"\n\t\t\t\t/>\n\t\t\t\t<h1>Connect 4 Houses</h1>\n\t\t\t\t<div className=\"connect-4-houses-container\">\n\t\t\t\t\t<Board\n\t\t\t\t\t\tboard={this.state.board}\n\t\t\t\t\t\tgetDropColumnFun={this._getDropColumn}\n\t\t\t\t\t\tplayerOne={this.state.isPlayerOneTurn}\n\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t{/* Result to display start button or display who won  with a play again at end of game */}\n\n\t\t\t\t<Results\n\t\t\t\t\t\twinner={this.state.winner}\n\t\t\t\t\t\tclickHandler={this._newGame}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t);\n\t}\n\n\t_setPlayerOneName = name => {\n\t\tthis.setState({\n\t\t\tplayerOneName: name\n\t\t});\n\t};\n\n\t_setPlayerTwoName = name => {\n\t\tthis.setState({\n\t\t\tplayerTwoName: name\n\t\t});\n\t};\n\n\t_newGame = () => {\n\t\t//not changing player names\n\t\tthis.setState({\n\t\t\tisPlayerOneTurn: true, //should always start with true...so figures face correct direction\n\t\t\tboard: blankBoard,\n\t\t\tturnCounter: 0,\n\t\t\twinner: null,\n\t\t\tcolumnA: [],\n\t\t\tcolumnB: [],\n\t\t\tcolumnC: [],\n\t\t\tcolumnD: [],\n\t\t\tcolumnE: [],\n\t\t\tcolumnF: [],\n\t\t\tcolumnG: []\n\t\t});\n\t};\n\n\t_getDropColumn = dropColumn => {\n\t\tconsole.log(\n\t\t\t\"The drop column returned to main state from DropArea component is \",\n\t\t\tdropColumn\n\t\t);\n\n\t\t//the drop column determines the MOVE\n\n\t\t//if the column array is already 6 in length - do nothing!\n\t\t//\n\t\tconst columnArray = this._returnColumnArray(dropColumn);\n\n\t\tif (columnArray.length < 6 && this.state.winner === null) {\n\t\t\tconst squarePosition =\n\t\t\t\treplaceColNumberWithLetter(dropColumn) + columnArray.length;\n\t\t\t// console.log(`the new square position is ${squarePosition}`);\n\t\t\tconst columnToUpdate =\n\t\t\t\t\"column\" + replaceColNumberWithLetter(dropColumn);\n\t\t\t// console.log(\"columntoupdate is\", columnToUpdate);\n\t\t\tconst playerValue = this.state.isPlayerOneTurn ? \"X\" : \"O\";\n\n\t\t\t//we also need to check for a win...\n\t\t\t//need to grab a tempBoard, update the appropriate cell (squarePosition) and then run the check.\n\t\t\tconst tempBoard = { ...this.state.board }; //a true shallow copy\n\t\t\ttempBoard[squarePosition] = playerValue;\n\n\t\t\t//this sorts all the pieces into arrays that can possibly have a win,\n\t\t\t//then each array is analyzed with a function\n\t\t\t//6 rows, top to bottom\n\t\t\tconst Row0 = [\n\t\t\t\ttempBoard.A0,\n\t\t\t\ttempBoard.B0,\n\t\t\t\ttempBoard.C0,\n\t\t\t\ttempBoard.D0,\n\t\t\t\ttempBoard.E0,\n\t\t\t\ttempBoard.F0,\n\t\t\t\ttempBoard.G0\n\t\t\t];\n\t\t\tconst Row1 = [\n\t\t\t\ttempBoard.A1,\n\t\t\t\ttempBoard.B1,\n\t\t\t\ttempBoard.C1,\n\t\t\t\ttempBoard.D1,\n\t\t\t\ttempBoard.E1,\n\t\t\t\ttempBoard.F1,\n\t\t\t\ttempBoard.G1\n\t\t\t];\n\t\t\tconst Row2 = [\n\t\t\t\ttempBoard.A2,\n\t\t\t\ttempBoard.B2,\n\t\t\t\ttempBoard.C2,\n\t\t\t\ttempBoard.D2,\n\t\t\t\ttempBoard.E2,\n\t\t\t\ttempBoard.F2,\n\t\t\t\ttempBoard.G2\n\t\t\t];\n\t\t\tconst Row3 = [\n\t\t\t\ttempBoard.A3,\n\t\t\t\ttempBoard.B3,\n\t\t\t\ttempBoard.C3,\n\t\t\t\ttempBoard.D3,\n\t\t\t\ttempBoard.E3,\n\t\t\t\ttempBoard.F3,\n\t\t\t\ttempBoard.G3\n\t\t\t];\n\t\t\tconst Row4 = [\n\t\t\t\ttempBoard.A4,\n\t\t\t\ttempBoard.B4,\n\t\t\t\ttempBoard.C4,\n\t\t\t\ttempBoard.D4,\n\t\t\t\ttempBoard.E4,\n\t\t\t\ttempBoard.F4,\n\t\t\t\ttempBoard.G4\n\t\t\t];\n\t\t\tconst Row5 = [\n\t\t\t\ttempBoard.A5,\n\t\t\t\ttempBoard.B5,\n\t\t\t\ttempBoard.C5,\n\t\t\t\ttempBoard.D5,\n\t\t\t\ttempBoard.E5,\n\t\t\t\ttempBoard.F5,\n\t\t\t\ttempBoard.G5\n\t\t\t];\n\t\t\t//7 columns A to G\n\t\t\tconst ColA = [\n\t\t\t\ttempBoard.A0,\n\t\t\t\ttempBoard.A1,\n\t\t\t\ttempBoard.A2,\n\t\t\t\ttempBoard.A3,\n\t\t\t\ttempBoard.A4,\n\t\t\t\ttempBoard.A5\n\t\t\t];\n\t\t\tconst ColB = [\n\t\t\t\ttempBoard.B0,\n\t\t\t\ttempBoard.B1,\n\t\t\t\ttempBoard.B2,\n\t\t\t\ttempBoard.B3,\n\t\t\t\ttempBoard.B4,\n\t\t\t\ttempBoard.B5\n\t\t\t];\n\t\t\tconst ColC = [\n\t\t\t\ttempBoard.C0,\n\t\t\t\ttempBoard.C1,\n\t\t\t\ttempBoard.C2,\n\t\t\t\ttempBoard.C3,\n\t\t\t\ttempBoard.C4,\n\t\t\t\ttempBoard.C5\n\t\t\t];\n\t\t\tconst ColD = [\n\t\t\t\ttempBoard.D0,\n\t\t\t\ttempBoard.D1,\n\t\t\t\ttempBoard.D2,\n\t\t\t\ttempBoard.D3,\n\t\t\t\ttempBoard.D4,\n\t\t\t\ttempBoard.D5\n\t\t\t];\n\t\t\tconst ColE = [\n\t\t\t\ttempBoard.E0,\n\t\t\t\ttempBoard.E1,\n\t\t\t\ttempBoard.E2,\n\t\t\t\ttempBoard.E3,\n\t\t\t\ttempBoard.E4,\n\t\t\t\ttempBoard.E5\n\t\t\t];\n\t\t\tconst ColF = [\n\t\t\t\ttempBoard.F0,\n\t\t\t\ttempBoard.F1,\n\t\t\t\ttempBoard.F2,\n\t\t\t\ttempBoard.F3,\n\t\t\t\ttempBoard.F4,\n\t\t\t\ttempBoard.F5\n\t\t\t];\n\t\t\tconst ColG = [\n\t\t\t\ttempBoard.G0,\n\t\t\t\ttempBoard.G1,\n\t\t\t\ttempBoard.G2,\n\t\t\t\ttempBoard.G3,\n\t\t\t\ttempBoard.G4,\n\t\t\t\ttempBoard.G5\n\t\t\t];\n\n\t\t\t//BOTTOM LEFT TO TOP RIGHT DIAGANOLS THAT CAN HOLD 4 COINS\n\t\t\tconst Diag1 = [\n\t\t\t\ttempBoard.A2,\n\t\t\t\ttempBoard.B3,\n\t\t\t\ttempBoard.C4,\n\t\t\t\ttempBoard.D5\n\t\t\t];\n\t\t\tconst Diag2 = [\n\t\t\t\ttempBoard.A1,\n\t\t\t\ttempBoard.B2,\n\t\t\t\ttempBoard.C3,\n\t\t\t\ttempBoard.D4,\n\t\t\t\ttempBoard.E5\n\t\t\t];\n\t\t\tconst Diag3 = [\n\t\t\t\ttempBoard.A0,\n\t\t\t\ttempBoard.B1,\n\t\t\t\ttempBoard.C2,\n\t\t\t\ttempBoard.D3,\n\t\t\t\ttempBoard.E4,\n\t\t\t\ttempBoard.F5\n\t\t\t];\n\t\t\tconst Diag4 = [\n\t\t\t\ttempBoard.B0,\n\t\t\t\ttempBoard.C1,\n\t\t\t\ttempBoard.D2,\n\t\t\t\ttempBoard.E3,\n\t\t\t\ttempBoard.F4,\n\t\t\t\ttempBoard.G5\n\t\t\t];\n\t\t\tconst Diag5 = [\n\t\t\t\ttempBoard.C0,\n\t\t\t\ttempBoard.D1,\n\t\t\t\ttempBoard.E2,\n\t\t\t\ttempBoard.F3,\n\t\t\t\ttempBoard.G4\n\t\t\t];\n\t\t\tconst Diag6 = [\n\t\t\t\ttempBoard.D0,\n\t\t\t\ttempBoard.E1,\n\t\t\t\ttempBoard.F2,\n\t\t\t\ttempBoard.G3\n\t\t\t];\n\n\t\t\t//TOP LEFT TO BOTTOM RIGHT DIAGNOLS THAT CAN HOLD 4 COINS\n\t\t\tconst Diag7 = [\n\t\t\t\ttempBoard.A3,\n\t\t\t\ttempBoard.B2,\n\t\t\t\ttempBoard.C1,\n\t\t\t\ttempBoard.D0\n\t\t\t];\n\t\t\tconst Diag8 = [\n\t\t\t\ttempBoard.A4,\n\t\t\t\ttempBoard.B3,\n\t\t\t\ttempBoard.C2,\n\t\t\t\ttempBoard.D1,\n\t\t\t\ttempBoard.E0\n\t\t\t];\n\t\t\tconst Diag9 = [\n\t\t\t\ttempBoard.A5,\n\t\t\t\ttempBoard.B4,\n\t\t\t\ttempBoard.C3,\n\t\t\t\ttempBoard.D2,\n\t\t\t\ttempBoard.E1,\n\t\t\t\ttempBoard.F0\n\t\t\t];\n\t\t\tconst Diag10 = [\n\t\t\t\ttempBoard.B5,\n\t\t\t\ttempBoard.C4,\n\t\t\t\ttempBoard.D3,\n\t\t\t\ttempBoard.E2,\n\t\t\t\ttempBoard.F1,\n\t\t\t\ttempBoard.G0\n\t\t\t];\n\t\t\tconst Diag11 = [\n\t\t\t\ttempBoard.C5,\n\t\t\t\ttempBoard.D4,\n\t\t\t\ttempBoard.E3,\n\t\t\t\ttempBoard.F2,\n\t\t\t\ttempBoard.G1\n\t\t\t];\n\t\t\tconst Diag12 = [\n\t\t\t\ttempBoard.D5,\n\t\t\t\ttempBoard.E4,\n\t\t\t\ttempBoard.F3,\n\t\t\t\ttempBoard.G2\n\t\t\t];\n\n\t\t\tlet winner = this.state.winner;\n\n\t\t\t//if any array has a winner, then the entire if-statement is true.\n\n\t\t\tif (\n\t\t\t\tchecArrayForWinner(Row0) ||\n\t\t\t\tchecArrayForWinner(Row1) ||\n\t\t\t\tchecArrayForWinner(Row2) ||\n\t\t\t\tchecArrayForWinner(Row3) ||\n\t\t\t\tchecArrayForWinner(Row4) ||\n\t\t\t\tchecArrayForWinner(Row5) ||\n\t\t\t\tchecArrayForWinner(ColA) ||\n\t\t\t\tchecArrayForWinner(ColB) ||\n\t\t\t\tchecArrayForWinner(ColC) ||\n\t\t\t\tchecArrayForWinner(ColD) ||\n\t\t\t\tchecArrayForWinner(ColE) ||\n\t\t\t\tchecArrayForWinner(ColF) ||\n\t\t\t\tchecArrayForWinner(ColG) ||\n\t\t\t\tchecArrayForWinner(Diag1) ||\n\t\t\t\tchecArrayForWinner(Diag2) ||\n\t\t\t\tchecArrayForWinner(Diag3) ||\n\t\t\t\tchecArrayForWinner(Diag4) ||\n\t\t\t\tchecArrayForWinner(Diag5) ||\n\t\t\t\tchecArrayForWinner(Diag6) ||\n\t\t\t\tchecArrayForWinner(Diag7) ||\n\t\t\t\tchecArrayForWinner(Diag8) ||\n\t\t\t\tchecArrayForWinner(Diag9) ||\n\t\t\t\tchecArrayForWinner(Diag10) ||\n\t\t\t\tchecArrayForWinner(Diag11) ||\n\t\t\t\tchecArrayForWinner(Diag12)\n\t\t\t) {\n\t\t\t\t//if true for any one array - there is a winner\n\t\t\t\tif (this.state.isPlayerOneTurn) {\n\t\t\t\t\twinner = this.state.playerOneName;\n\t\t\t\t} else {\n\t\t\t\t\twinner = this.state.playerTwoName;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//if we are at the 42nd turn, and there are no winners, then, no-winners\n\t\t\tif (this.state.turnCounter === 41 && winner === null) {\n\t\t\t\twinner = \"Draw\";\n\t\t\t}\n\n\t\t\t//this is a valid move...update arrays, refresh board, and switch players\n\t\t\tthis.setState({\n\t\t\t\tcolToAdd: dropColumn,\n\t\t\t\tboard: {\n\t\t\t\t\t...this.state.board,\n\t\t\t\t\t[squarePosition]: playerValue\n\t\t\t\t},\n\t\t\t\t[columnToUpdate]: [...columnArray, playerValue],\n\t\t\t\tturnCounter: this.state.turnCounter + 1,\n\t\t\t\tisPlayerOneTurn: !this.state.isPlayerOneTurn,\n\t\t\t\twinner: winner\n\t\t\t});\n\t\t}\n\t\t//else DO NOTHING...NO CHANGE PLAYER, WAIT FOR ANOTHER CLICK\n\t};\n\n\t_returnColumnArray = colNumber => {\n\t\tif (colNumber === 1) {\n\t\t\treturn [...this.state.columnA];\n\t\t} else if (colNumber === 2) {\n\t\t\treturn [...this.state.columnB];\n\t\t} else if (colNumber === 3) {\n\t\t\treturn [...this.state.columnC];\n\t\t} else if (colNumber === 4) {\n\t\t\treturn [...this.state.columnD];\n\t\t} else if (colNumber === 5) {\n\t\t\treturn [...this.state.columnE];\n\t\t} else if (colNumber === 6) {\n\t\t\treturn [...this.state.columnF];\n\t\t}\n\t\t//assuming 7\n\t\telse {\n\t\t\treturn [...this.state.columnG];\n\t\t}\n\t};\n}\n\n//helper functions\n\n//check length of appropriate array, return appropriate array\n\n//check connect4arrays for win:\n\n//LOGIC explanation\n//for example, if you have an array = [x,x,o,o,x,x,x,x,o]\n//the length of the array is 9.  A consecutive run of 4 like values can only happen\n//starting in indexes of 0,1,2,3,4, or 5.  So, we only have to go through the FOR loop from\n// 0 to < length-3, or 9-3, or < 6 (e.g, 5)\n//so, for each sub array of 4 numbers (i,i+1, i+2, i+3), see if they are all equal AND\n//if they equal each other AND not null\n\nfunction checArrayForWinner(array) {\n\tlet test = false;\n\tfor (let i = 0; i < array.length - 3; i++) {\n\t\tif (\n\t\t\tarray[i] === array[i + 1] &&\n\t\t\tarray[i + 1] === array[i + 2] &&\n\t\t\tarray[i + 2] === array[i + 3] &&\n\t\t\tarray[i] !== null\n\t\t) {\n\t\t\t// console.log(\"this array wins, \", array)\n\t\t\ttest = true;\n\t\t}\n\t}\n\treturn test;\n}\n\n//helper function\nfunction replaceColNumberWithLetter(number) {\n\tvar map = {\n\t\t1: \"A\",\n\t\t2: \"B\",\n\t\t3: \"C\",\n\t\t4: \"D\",\n\t\t5: \"E\",\n\t\t6: \"F\",\n\t\t7: \"G\"\n\t};\n\treturn map[number];\n}\n","import React from \"react\";\n\nexport default function Board({ board, clickHandler }) {\n\n\treturn (\n\t\t<div className=\"cersei-says-board\">\n\t\t\t<div className=\"cersei-says-body\">\n\t\t\t\t{board.map((eaObj, i)=> (\n\t\t\t\t\t\t// <div key={eaObj.cube} className={`cube ${eaObj.className}`}>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\tsrc={eaObj.image}\n\t\t\t\t\t\t\t\tclassName={`cube ${eaObj.className}`}\n\t\t\t\t\t\t\t\tid={`cube${eaObj.cube}`}\n\t\t\t\t\t\t\t\tonClick={()=>{\n\t\t\t\t\t\t\t\t\tclickHandler(eaObj)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\talt='cube'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t// </div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react'\n\n\n\nexport default function Result({winner, loser, clickHandler}) {\n    \n    return (\n        <div>\n            <h1 className={winner || loser ? 'result' : null}>{winner ? (winner ? 'You Win!': '') : (loser ? 'You Lose!' : '') }</h1>\n        <button className={winner || loser ? 'pulse' : null} onClick={clickHandler}>New Game</button>\n        </div>\n    )\n}\n\n\n\n\n","import React from 'react'\n\nexport default function RoundCounter({round}) {\n    return (\n        <div>\n            <div className={round?'roundCounter':''}>\n                {round ? `Round: ${round}` : '' }\n            </div>\n        </div>\n    )\n}\n","import React, { Component } from \"react\";\nimport Board from \"./Board\";\nimport Result from './Result'\nimport RoundCounter from \"./RoundCounter\";\n\nexport class CerseiSays extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.shame =  new Audio ('./audio/shame.mp3')\n\n\t\t\n\t\tthis.state = {\n\t\t\tboard: [\n\t\t\t\t\t{ \n\t\t\t\t\tcube: \"1\",\n\t\t\t\t\timage:'./imgs/top-left-stark.png',\n\t\t\t\t\taudio: new Audio('./audio/wind.mp3'),\n\t\t\t\t\tclassName:'',\n\t\t\t\t}, { \n\t\t\t\t\tcube: \"2\",\n\t\t\t\t\timage:'./imgs/top-right-lannister.png',\n\t\t\t\t\taudio: new Audio('./audio/crowd.mp3'),\n\t\t\t\t\tclassName:'',\n\n\t\t\t\t},\n\t\t\t\t{ \n\t\t\t\t\tcube: \"3\",\n\t\t\t\t\timage:'./imgs/bottom-left-baratheon.png',\n\t\t\t\t\taudio: new Audio('./audio/sword.mp3'),\n\t\t\t\t\tclassName:'',\n\n\t\t\t\t}, { \n\t\t\t\t\tcube: \"4\",\n\t\t\t\t\timage:'./imgs/bottom-right-targaryen.png',\n\t\t\t\t\taudio: new Audio('./audio/dragon.mp3'),\n\t\t\t\t\tclassName:'',\n\t\t\t\t}\n\t\t\t],\n\n\n\t\t\t\n\t\t\tuserInput: [],\n\t\t\trandomSelection: [],\n\t\t\tisComputerTurn:true,\n\t\t\tintervalSet:false,\n\t\t\tisWinner:false,\n\t\t\tisLoser:false\n\t\t};\n\t}\n\n\n\t\n\t_newRound = ()=>{\n\t\tconst randomCube = parseInt(Math.random()*4)\n\t\tconst tempRandomArray = this.state.randomSelection\n\t\tconst tempBoard = this.state.board\n\t\tthis.setState({\n\t\t\tuserInput: [],\n\t\t\trandomSelection:tempRandomArray.concat({...tempBoard[randomCube]}),\n\t\t\tisComputerTurn:true\n\n\t\t}, ()=>{\n\t\t\tthis._checkComputerTurn()\n\t\t}\n\t\t)\n\t}\n\n\t_checkComputerTurn = ()=>{\n\n\n\t\tif (this.state.isComputerTurn){\n\t\t\t// play array of sounds\n\t\t\tthis._playComputerSound(this.state.randomSelection, 0)\n\n\t\t\t// console.log('random array',this.state.randomSelection)\n\t\t\t// this.state.randomSelection.map((eaObj, i) =>{ \n\t\t\t\t\n\t\t\t// \tsetTimeout(()=>{\n\t\t\t// \t\tlet previousObj = this.state.randomSelection[i - 1]\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t// \t\tlet prevObjIndex = null\n\t\t\t// \t\tlet chosenObjIndex = null\n\t\t\t// \t\tfor(let i = 0; i < this.state.board.length; i++){\n\t\t\t// \t\t\tif(this.state.board[i].cube === eaObj.cube){\n\t\t\t// \t\t\t\tchosenObjIndex = i\n\t\t\t// \t\t\t}\n\t\t\t// \t\t\t// if(previousObj){\n\t\t\t// \t\t\t// \tif(this.state.board[i].cube === previousObj.cube){\n\t\t\t// \t\t\t// \t\tprevObjIndex = i\n\t\t\t// \t\t\t// \t}\n\t\t\t// \t\t\t// }\n\t\t\t// \t\t}\n\t\t\t// \t\teaObj.audio.play()\n\n\t\t\t// \t\tlet updateState = this.state.board\n\n\t\t\t// \t\tif(previousObj){\n\t\t\t// \t\t\tupdateState[prevObjIndex].className = ''\n\t\t\t// \t\t}\n\t\t\t// \t\tupdateState[chosenObjIndex].className = 'button-selector'\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t// \t\tif(i === this.state.randomSelection.length -1){\n\n\t\t\t// \t\t\tsetTimeout(()=>{\n\t\t\t// \t\t\t\tupdateState[chosenObjIndex].className = ''\n\t\t\t// \t\t\t\tthis.setState({\n\t\t\t// \t\t\t\t\tisComputerTurn:false,\n\t\t\t// \t\t\t\t\tboard:updateState})\n\t\t\t// \t\t\t}, delay)\n\t\t\t// \t\t}\n\t\t\t// \t\tthis.setState({board:updateState})\n\t\t\t// \t}, (delay * (i + 1)))\n\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t// })\n\t\t\t// set computer turn to false\n\t\t}\n\t}\n\t_playComputerSound = (array, index)=>{\n\t\tlet chosenObjIndex = null\n\t\tfor(let i = 0; i < this.state.board.length; i++){\n\t\t\tif(this.state.board[i].cube === array[index].cube){\n\t\t\t\tchosenObjIndex = i\n\t\t\t}\n\t\t}\n\t\tlet updateState = this.state.board\n\t\tupdateState[chosenObjIndex].className = 'button-selector'\n\t\tthis.setState({board:updateState})\n\n\t\tlet eaAudio = ''\n\t\tswitch(array[index].cube){\n\t\t\tcase \"1\":\n\t\t\t\teaAudio = new Audio('./audio/wind.mp3');\n\t\t\tbreak;\n\t\t\tcase \"2\":\n\t\t\t\teaAudio = new Audio('./audio/crowd.mp3');\n\t\t\tbreak;\n\t\t\tcase \"3\":\n\t\t\t\teaAudio = new Audio('./audio/sword.mp3');\n\t\t\tbreak;\n\t\t\tcase \"4\":\n\t\t\t\teaAudio = new Audio('./audio/dragon.mp3');\n\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn null\n\t\t}\n\t\t\teaAudio.addEventListener('ended', ()=>{\n\t\t\t\tupdateState[chosenObjIndex].className = ''\n\t\t\t\tthis.setState({board:updateState})\n\t\t\t\tif (index < array.length -1){\n\t\t\t\t\tthis._playComputerSound(array, (index+1))\n\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tif (index === array.length -1){\n\t\t\t\t\tthis.setState({isComputerTurn:false})\n\t\t\t\t}\n\t\t\t})\n\t\t\teaAudio.play()\n\t}\n\n\n\n\t// this.setstate({}, function) = .then(function)\n\n\n\t_checkState = (eaObj)=>{\n\t\tconst {isLoser, isWinner, isComputerTurn} = this.state\n\t\tif(!isLoser && !isWinner && !isComputerTurn ){\n\n\t\t\teaObj.audio.play()\n\t\t\tlet userInputArray = [...this.state.userInput, {...eaObj}]\n\t\t\t\n\t\t\tconst {randomSelection} = this.state\n\n\t\t\tlet index = randomSelection.length - 1\n\t\n\t\t\t\n\t\n\t\t\tif (randomSelection[userInputArray.length- 1].cube === userInputArray[userInputArray.length- 1].cube){\n\t\n\t\t\t\tif(userInputArray.length - 1 === index){\n\t\t\t\t\tif(userInputArray.length - 1 === 20){\n\t\t\t\t\t\tthis.setState({isWinner:true})\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\t\t\tthis.setState({isComputerTurn:true},this._newRound)\n\n\t\t\t\t\t\t},1500)\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}else{\n\t\t\t\t\tthis.setState({userInput:userInputArray})\n\t\t\t\t}\n\t\n\t\t\t}else{\n\t\t\t\t\n\t\t\t\tthis.setState({isLoser:true}, () => {\n\t\t\t\t\tthis._playShame()\n\n\t\t\t\t})\n\t\t\t}\n\t\t\t\n\n\t\t}\n\t}\n\n\t_startNewGame = ()=>{\n\t\tthis.shame.pause()\n\t\tthis.shame.currentTime =0;\n\t\tconst randomCube = parseInt(Math.random()*4)\n\t\tthis.setState({\n\t\t\tuserInput:[],\n\t\t\trandomSelection:[{...this.state.board[randomCube]}],\n\t\t\tisComputerTurn:true,\n\t\t\tisLoser:false,\n\t\t\tisWinner:false\n\t\t},()=>{\n\n\t\t\tthis._checkComputerTurn()\n\t\t\n\t\t}\n\t\t\t\n\t\t\t)\n\t\t\n\t}\n\n\t_playShame = () => {\n\n\t\t// const shame = new Audio ('./audio/shame.mp3')\n\t   \n\t\t// shame.addEventListener('ended', ()=> {\n\t\t// \tif (this.state.isLoser) {\n\t\t// \t\tthis._playShame()\n\t\t// \t}\n\t\t// })\n\t\tthis.shame.play()\n\t}\n\n\ncomponentDidMount() {\n\tthis.shame.addEventListener('ended', ()=> {\n\t\tif (this.state.isLoser) {\n\t\t\tthis._playShame()\n\t\t}\n\t})\n}\ncomponentWillUnmount(){\n\tthis.shame.pause();\n}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='cersei-says-container'>\n\t\t\t\t<link\n\t\t\t\t\trel=\"StyleSheet\"\n\t\t\t\t\ttype=\"text/css\"\n\t\t\t\t\thref=\"../styles/cersei-says.css\"\n\t\t\t\t/>\n\t\t\t\t<h1>Cersei Says</h1>\n\t\t\t\t<RoundCounter round={this.state.randomSelection.length}/>\n\t\t\t\t<Board \n\t\t\t\t\tboard={this.state.board} \n\t\t\t\t\tclickHandler={this._checkState}\n\t\t\t\t/>\n\t\t\t\t{/* <button onClick={this._startNewGame}>NEW GAME</button> */}\n\t\t\t\t<Result\n\t\t\t\t\twinner={this.state.isWinner}\n\t\t\t\t\tloser={this.state.isLoser}\n\t\t\t\t\tclickHandler={this._startNewGame}\n\t\t\t\t/>\n\t\t\t\t\n\n\n\n\t\t\t\n\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n\n\n\n\n\nexport default CerseiSays;\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nexport default function Dropdown() {\n\treturn (\n\t\t<div className=\"dropdown\">\n\t\t\t<button className=\"menu\">MENU</button>\n\t\t\t<div className=\"dropdown-content\">\n\t\t\t\t<Link to=\"/tic-tac-tyrion\" className=\"game-links item\">\n\t\t\t\t\tTic-Tac-Tyrion\n\t\t\t\t</Link>\n\t\t\n\t\t\t\t<Link to=\"/cersei-says\" className=\"game-links item\">\n\t\t\t\t\tCersei Says\n\t\t\t\t</Link>\n\t\t\n\t\t\t\t<Link to=\"/connect-four-houses\" className=\"game-links item\">\n\t\t\t\t\tConnect Four Houses\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Dashboard from \"./ThroneOfGames/components/Dashboard\";\nimport TicTacTyrion from \"./TicTacTyrion/components/TicTacTyrion\";\nimport Connect4Houses from \"./Connect4Houses/components/Connect4Houses\";\nimport CerseiSays from \"./CerseiSays/CerseiSays\";\nimport Dropdown from \"./ThroneOfGames/components/Dropdown\";\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className=\"nav-bar\">\n\t\t\t\t\t<Dropdown />\n\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t\t<h2 className=\"title7\">\n\t\t\t\t\t\t\t\tThrone of Games!\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={Dashboard} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\tclassName=\"tic-tac-tyrion\"\n\t\t\t\t\t\tpath=\"/tic-tac-tyrion\"\n\t\t\t\t\t\tcomponent={TicTacTyrion}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route path=\"/cersei-says\" component={CerseiSays} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/connect-four-houses\"\n\t\t\t\t\t\tcomponent={Connect4Houses}\n\t\t\t\t\t/>\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}